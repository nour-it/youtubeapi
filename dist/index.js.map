{"version":3,"file":"index.js","sources":["../src/request/BaseRequest.js","../src/request/channelRequest.js","../src/request/searchRequest.js","../src/request/videoRequest.js","../src/request.js","../src/client.js","../index.js"],"sourcesContent":["'use-strict'\n\n/**\n * @method setQuery\n * @method getQuery\n */\nexport default class BaseRequest {\n\n  /**\n   * \n   * @param {object|string} query \n   */\n  constructor(query) {\n    this.setQuery(query)\n  }\n\n  /**\n   * \n   * @param {object|string} query \n   * @param {string} value \n   * @returns {void}\n   */\n  setQuery(query, value) {\n    if (query != undefined) {\n      if (typeof query == \"object\") {\n        this.query = {\n          ...this.query,\n          ...query\n        }\n      } else {\n        if (value != undefined) this.query[query] = value;\n      }\n    }\n  }\n\n  /**\n   * \n   * @returns {string}\n   */\n  getQuery() {\n    let query = this.query || {}, queryString = '';\n    for (let q in query) queryString += `${q}=${query[q]}&`\n    return queryString.slice(0, queryString.length - 1);\n  }\n\n}","import BaseRequest from \"./BaseRequest.js\";\n\n\n/**\n * @property {string} path\n * @property {object} query\n * @property {string[]} queriesKey\n * @method isValidQuery\n */\nexport default class ChannelRequest extends BaseRequest {\n\n  /**\n   * @type {string}\n   */\n  path = \"/channels\"\n\n  /**\n   * @type {object}\n   */\n  query = {\n    part: 'snippet',\n    id: ''\n  }\n\n  /**\n   * @type {string[]}\n   */\n  queriesKey = ['part', 'id']\n\n  /**\n   * \n   * @param {object|string} query \n   */\n  constructor(query) {\n    if (typeof query ==  'string') {\n      super({ id: query })\n      this.setQuery({ ...this.query, id: query })\n    } else {\n      super(query)\n      this.setQuery(query)\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isValidQuery() {\n    let index;\n    for(let q in this.query) {\n      index = this.queriesKey.indexOf(q)\n      if (index == -1) {\n        throw new RangeError(\"Invalid query for type search\")\n      }\n    }\n  }\n  \n}","'use-strict'\n\nimport BaseRequest from \"./BaseRequest.js\"\n\n/**\n * @property {string} path\n * @property {object} query\n * @property {string[]} queriesKey\n * @method setNextPage\n * @method isValidQuery\n */\nexport default class SearchRequest extends BaseRequest {\n\n  /**\n   * @type {string}\n   */\n  path = \"/search\"\n\n  /**\n   * @type {object}\n   */\n  query = {\n    part: 'snippet',\n    q: '',\n  }\n\n  /**\n   * @type {string[]}\n   */\n  queriesKey = ['q', 'maxResults', 'part', 'pageToken']\n\n  /**\n   * \n   * @param {object|string} query \n   */\n  constructor(query) {\n    if (typeof query == 'string') {\n      super({ q: query })\n      this.setQuery({ q: query })\n    } else {\n      super(query)\n      this.setQuery(query)\n    }\n  }\n\n  /**\n   * \n   * @param {string} token \n   * @returns void\n   */\n  setNextPage(token) {\n    if (token != undefined) {\n      this.query[\"pageToken\"] = token\n    }\n  }\n\n  /**\n   * @retuns {boolean}\n   */\n  isValidQuery() {\n    let index;\n    for (let q in this.query) {\n      index = this.queriesKey.indexOf(q)\n      if (index == -1) {\n        throw new RangeError(\"Invalid query for type search\")\n      }\n    }\n  }\n}","'use-strict'\n\nimport BaseRequest from \"./BaseRequest.js\"\n\n/**\n * @property {string} path\n * @property {object} query\n * @property {string[]} queriesKey\n * @method setNextPage\n * @method isValidQuery\n */\nexport default class VideoRequest extends BaseRequest {\n\n  /**\n   * @type {string}\n   */\n  path = \"/videos\"\n  \n  /**\n   * @type {object}\n   */\n  query = {\n    part: 'status,player,contentDetails,statistics,snippet',\n    chart: 'mostPopular',\n    maxResults: '10'\n  }\n\n  /**\n   * @type {string}\n   */\n  queriesKey = ['part', 'chart', 'maxResults', 'pageToken'];\n\n  /**\n   * \n   * @param {object} query \n   */\n  constructor(query) {\n    super(query)\n    this.setQuery(query)\n  }\n\n  /**\n   * \n   * @param {string} token \n   * @returns void\n   */\n  setNextPage(token) {\n    if (token != undefined) {\n      this.query[\"pageToken\"] = token\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isValidQuery() {\n    let index;\n    for(let q in this.query) {\n      index = this.queriesKey.indexOf(q)\n      if (index == -1) {\n        throw new RangeError(\"Invalid query for type video\")\n      }\n    }\n  }\n\n}","'use-strict'\n\nimport ChannelRequest from \"./request/channelRequest.js\";\nimport SearchRequest from \"./request/searchRequest.js\";\nimport VideoRequest from \"./request/videoRequest.js\";\n\n/**\n * @property {VideoRequest|SearchRequest|ChannelRequest} type\n * @property {object} types \n * @property {string[]} requestTypes \n * @property {string} invalideTypeMessage \n * @method getPath\n */\nexport default class Request {\n\n  /**\n   * @type {VideoRequest|SearchRequest|ChannelRequest}\n   */\n  type = null\n\n  /**\n   * @type {object}\n   */\n  types = {\n    \"video\": (query) => new VideoRequest(query),\n    \"search\": (query) => new SearchRequest(query),\n    \"channel\": (query) => new ChannelRequest(query),\n  }\n\n  /**\n   * @type {string[]}\n   */\n  requestTypes = ['video', 'search', 'channel']\n\n  /**\n   * @type {string}\n   */\n  invalideTypeMessage = \"Invalide type for request.\\nRequest type should be ['video', 'search', 'channel']\"\n\n  /**\n   * \n   * @param {'video' | 'search' | 'channel'} type \n   * @param {import(\"..\").RequestQuery} query \n   */\n  constructor(type, query) {\n    if (this.isValidetype(type)) {\n      this.type = this.types[type](query)\n    } else {\n      throw new Error(this.invalideTypeMessage);\n    }\n  }\n\n  /**\n   * \n   * @returns {string}\n   */\n  getPath = () => {\n    return this.type.path;\n  }\n\n  /**\n   * @throws {Error}\n   * @returns {string}\n   */\n  getQuery = () => {\n    if(this.type.isValidQuery) {\n      this.type.isValidQuery();\n    }\n    return this.type.getQuery()\n  }\n\n  /**\n   * \n   * @param {string} token \n   * @returns void\n   */\n  setNextPage(token) {\n    if (this.type.setNextPage) {\n      this.type.setNextPage(token)\n    } else {\n      throw new TypeError(\"methode setNextPage doesn't on \" +  typeof this.type)\n    }\n  }\n\n  /**\n   * \n   * @param {string} type \n   * @returns {boolean}\n   */\n  isValidetype(type) {\n    const index = this.requestTypes.indexOf(type)\n    return index != -1;\n  }\n}","\"use-strict\";\n\nimport Request from \"./request.js\";\n\n/**\n * @property {string} API_URL\n */\nexport default class Client {\n  \n  /**\n   * @type {string} \n   */\n  API_URL = `https://www.googleapis.com/youtube/v3`;\n\n  /**\n   * \n   * @param {string} API_KEY \n   */\n  constructor(API_KEY) {\n    this.API_KEY = API_KEY;\n  }\n\n  /**\n   *\n   * @param {Request} request\n   * @returns {object}\n   */\n  async execute(request) {\n    const url =\n      this.API_URL +\n      request.getPath() +\n      \"?\" +\n      request.getQuery() +\n      \"&key=\" +\n      this.API_KEY;\n    try {\n      return await (await fetch(new URL(url))).json()\n    } catch (error) {\n      return {error}\n    }\n  }\n}\n","'use-strict'\n\nimport client from \"./src/client.js\"\nimport request from \"./src/request.js\"\n\nexport const Client = client\n\nexport const Request = request"],"names":["BaseRequest","query","value","queryString","q","ChannelRequest","__super","args","__publicField","index","SearchRequest","token","VideoRequest","Request$1","type","Client$1","API_KEY","request","url","error","Client","client","Request"],"mappings":"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"}