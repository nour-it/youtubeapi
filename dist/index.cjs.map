{"version":3,"file":"index.cjs","sources":["../src/request/BaseRequest.js","../src/request/channelRequest.js","../src/request/searchRequest.js","../src/request/videoRequest.js","../src/request.js","../src/client.js","../index.js"],"sourcesContent":["'use-strict'\n\n/**\n * @method setQuery\n * @method getQuery\n */\nexport default class BaseRequest {\n\n  /**\n   * \n   * @param {object|string} query \n   */\n  constructor(query) {\n    this.setQuery(query)\n  }\n\n  /**\n   * \n   * @param {object|string} query \n   * @param {string} value \n   * @returns {void}\n   */\n  setQuery(query, value) {\n    if (query != undefined) {\n      if (typeof query == \"object\") {\n        this.query = {\n          ...this.query,\n          ...query\n        }\n      } else {\n        if (value != undefined) this.query[query] = value;\n      }\n    }\n  }\n\n  /**\n   * \n   * @returns {string}\n   */\n  getQuery() {\n    let query = this.query || {}, queryString = '';\n    for (let q in query) queryString += `${q}=${query[q]}&`\n    return queryString.slice(0, queryString.length - 1);\n  }\n\n}","import BaseRequest from \"./BaseRequest.js\";\n\n\n/**\n * @property {string} path\n * @property {object} query\n * @property {string[]} queriesKey\n * @method isValidQuery\n */\nexport default class ChannelRequest extends BaseRequest {\n\n  /**\n   * @type {string}\n   */\n  path = \"/channels\"\n\n  /**\n   * @type {object}\n   */\n  query = {\n    part: 'snippet',\n    id: ''\n  }\n\n  /**\n   * @type {string[]}\n   */\n  queriesKey = ['part', 'id']\n\n  /**\n   * \n   * @param {object|string} query \n   */\n  constructor(query) {\n    if (typeof query ==  'string') {\n      super({ id: query })\n      this.setQuery({ ...this.query, id: query })\n    } else {\n      super(query)\n      this.setQuery(query)\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isValidQuery() {\n    let index;\n    for(let q in this.query) {\n      index = this.queriesKey.indexOf(q)\n      if (index == -1) {\n        throw new RangeError(\"Invalid query for type search\")\n      }\n    }\n  }\n  \n}","'use-strict'\n\nimport BaseRequest from \"./BaseRequest.js\"\n\n/**\n * @property {string} path\n * @property {object} query\n * @property {string[]} queriesKey\n * @method setNextPage\n * @method isValidQuery\n */\nexport default class SearchRequest extends BaseRequest {\n\n  /**\n   * @type {string}\n   */\n  path = \"/search\"\n\n  /**\n   * @type {object}\n   */\n  query = {\n    part: 'snippet',\n    q: '',\n  }\n\n  /**\n   * @type {string[]}\n   */\n  queriesKey = ['q', 'maxResults', 'part', 'pageToken']\n\n  /**\n   * \n   * @param {object|string} query \n   */\n  constructor(query) {\n    if (typeof query == 'string') {\n      super({ q: query })\n      this.setQuery({ q: query })\n    } else {\n      super(query)\n      this.setQuery(query)\n    }\n  }\n\n  /**\n   * \n   * @param {string} token \n   * @returns void\n   */\n  setNextPage(token) {\n    if (token != undefined) {\n      this.query[\"pageToken\"] = token\n    }\n  }\n\n  /**\n   * @retuns {boolean}\n   */\n  isValidQuery() {\n    let index;\n    for (let q in this.query) {\n      index = this.queriesKey.indexOf(q)\n      if (index == -1) {\n        throw new RangeError(\"Invalid query for type search\")\n      }\n    }\n  }\n}","'use-strict'\n\nimport BaseRequest from \"./BaseRequest.js\"\n\n/**\n * @property {string} path\n * @property {object} query\n * @property {string[]} queriesKey\n * @method setNextPage\n * @method isValidQuery\n */\nexport default class VideoRequest extends BaseRequest {\n\n  /**\n   * @type {string}\n   */\n  path = \"/videos\"\n  \n  /**\n   * @type {object}\n   */\n  query = {\n    part: 'status,player,contentDetails,statistics,snippet',\n    chart: 'mostPopular',\n    maxResults: '10'\n  }\n\n  /**\n   * @type {string}\n   */\n  queriesKey = ['part', 'chart', 'maxResults', 'pageToken'];\n\n  /**\n   * \n   * @param {object} query \n   */\n  constructor(query) {\n    super(query)\n    this.setQuery(query)\n  }\n\n  /**\n   * \n   * @param {string} token \n   * @returns void\n   */\n  setNextPage(token) {\n    if (token != undefined) {\n      this.query[\"pageToken\"] = token\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isValidQuery() {\n    let index;\n    for(let q in this.query) {\n      index = this.queriesKey.indexOf(q)\n      if (index == -1) {\n        throw new RangeError(\"Invalid query for type video\")\n      }\n    }\n  }\n\n}","'use-strict'\n\nimport ChannelRequest from \"./request/channelRequest.js\";\nimport SearchRequest from \"./request/searchRequest.js\";\nimport VideoRequest from \"./request/videoRequest.js\";\n\n/**\n * @property {VideoRequest|SearchRequest|ChannelRequest} type\n * @property {object} types \n * @property {string[]} requestTypes \n * @property {string} invalideTypeMessage \n * @method getPath\n */\nexport default class Request {\n\n  /**\n   * @type {VideoRequest|SearchRequest|ChannelRequest}\n   */\n  type = null\n\n  /**\n   * @type {object}\n   */\n  types = {\n    \"video\": (query) => new VideoRequest(query),\n    \"search\": (query) => new SearchRequest(query),\n    \"channel\": (query) => new ChannelRequest(query),\n  }\n\n  /**\n   * @type {string[]}\n   */\n  requestTypes = ['video', 'search', 'channel']\n\n  /**\n   * @type {string}\n   */\n  invalideTypeMessage = \"Invalide type for request.\\nRequest type should be ['video', 'search', 'channel']\"\n\n  /**\n   * \n   * @param {'video' | 'search' | 'channel'} type \n   * @param {import(\"..\").RequestQuery} query \n   */\n  constructor(type, query) {\n    if (this.isValidetype(type)) {\n      this.type = this.types[type](query)\n    } else {\n      throw new Error(this.invalideTypeMessage);\n    }\n  }\n\n  /**\n   * \n   * @returns {string}\n   */\n  getPath = () => {\n    return this.type.path;\n  }\n\n  /**\n   * @throws {Error}\n   * @returns {string}\n   */\n  getQuery = () => {\n    if(this.type.isValidQuery) {\n      this.type.isValidQuery();\n    }\n    return this.type.getQuery()\n  }\n\n  /**\n   * \n   * @param {string} token \n   * @returns void\n   */\n  setNextPage(token) {\n    if (this.type.setNextPage) {\n      this.type.setNextPage(token)\n    } else {\n      throw new TypeError(\"methode setNextPage doesn't on \" +  typeof this.type)\n    }\n  }\n\n  /**\n   * \n   * @param {string} type \n   * @returns {boolean}\n   */\n  isValidetype(type) {\n    const index = this.requestTypes.indexOf(type)\n    return index != -1;\n  }\n}","\"use-strict\";\n\nimport Request from \"./request.js\";\n\n/**\n * @property {string} API_URL\n */\nexport default class Client {\n  \n  /**\n   * @type {string} \n   */\n  API_URL = `https://www.googleapis.com/youtube/v3`;\n\n  /**\n   * \n   * @param {string} API_KEY \n   */\n  constructor(API_KEY) {\n    this.API_KEY = API_KEY;\n  }\n\n  /**\n   *\n   * @param {Request} request\n   * @returns {object}\n   */\n  async execute(request) {\n    const url =\n      this.API_URL +\n      request.getPath() +\n      \"?\" +\n      request.getQuery() +\n      \"&key=\" +\n      this.API_KEY;\n    try {\n      return await (await fetch(new URL(url))).json()\n    } catch (error) {\n      return {error}\n    }\n  }\n}\n","'use-strict'\n\nimport client from \"./src/client.js\"\nimport request from \"./src/request.js\"\n\nexport const Client = client\n\nexport const Request = request"],"names":["BaseRequest","query","value","queryString","q","ChannelRequest","__super","args","__publicField","index","SearchRequest","token","VideoRequest","Request$1","type","Client$1","API_KEY","request","url","error","Client","client","Request"],"mappings":"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"}